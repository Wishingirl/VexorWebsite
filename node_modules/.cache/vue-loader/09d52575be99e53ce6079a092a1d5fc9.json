{"remainingRequest":"C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\fish-ui\\src\\components\\Tree.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\fish-ui\\src\\components\\Tree.vue","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBGaXNoVHJlZU5vZGUgZnJvbSAnLi9UcmVlTm9kZS52dWUnCgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czoge0Zpc2hUcmVlTm9kZX0sCiAgbmFtZTogJ2Zpc2gtdHJlZScsCiAgcHJvcHM6IHsKICAgIGRlZmF1bHRTZWxlY3RlZEtleTogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICcnIH0sCiAgICBkZWZhdWx0Q2hlY2tlZEtleXM6IHsgdHlwZTogQXJyYXksIGRlZmF1bHQ6ICgpID0+IFtdIH0sCiAgICBtdWx0aXBsZTogeyB0eXBlOiBCb29sZWFuLCBkZWZhdWx0OiBmYWxzZSB9LAogICAgZXhwYW5kOiB7IHR5cGU6IEJvb2xlYW4sIGRlZmF1bHQ6IGZhbHNlIH0sCiAgICBjaGVja2FibGVkOiB7IHR5cGU6IEZ1bmN0aW9uLCBkZWZhdWx0OiAobXVsdGlwbGUpID0+IG11bHRpcGxlIH0sCiAgICBkYXRhOiB7IHR5cGU6IEFycmF5LCByZXF1aXJlZDogdHJ1ZSB9LCAvLyBbe3RpdGxlOiAnJywga2V5OiAnJywgY2hpbGRyZW46ICcnLCBkaXNhYmxlZDogZmFsc2V9XQogICAgZWRpdGVkOiB7IHR5cGU6IEJvb2xlYW4sIGRlZmF1bHQ6IGZhbHNlIH0sCiAgICBvbkl0ZW1SZW5kZXI6IHsgdHlwZTogRnVuY3Rpb24sIGRlZmF1bHQ6IChpdGVtKSA9PiBpdGVtLnRpdGxlIH0sCiAgICBpY29uQ2FyZXRSaWdodDogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICdmYSBmYS1jYXJldC1yaWdodCcgfSwKICAgIGljb25DYXJldERvd246IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiAnZmEgZmEtY2FyZXQtZG93bicgfQogIH0sCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBzZWxlY3RlZEtleTogdGhpcy5kZWZhdWx0U2VsZWN0ZWRLZXksCiAgICAgIGRhdGFLZXlNYXA6IHRoaXMuZ2V0UmVzZXREYXRhS2V5TWFwKCkKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBkZWZhdWx0U2VsZWN0ZWRLZXkgKG5vd1ZhbCwgb2xkVmFsKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRLZXkgPSBub3dWYWwKICAgIH0sCiAgICBkZWZhdWx0Q2hlY2tlZEtleXMgKG5vd1ZhbCwgb2xkVmFsKSB7CiAgICAgIHRoaXMuZGF0YUtleU1hcCA9IHRoaXMuZ2V0UmVzZXREYXRhS2V5TWFwKCkKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFJlc2V0RGF0YUtleU1hcCAoKSB7CiAgICAgIGNvbnN0IGRhdGFLZXlNYXAgPSB7fQogICAgICBpbml0RGF0YUtleXNNYXAoZGF0YUtleU1hcCwgbmV3IFNldCh0aGlzLmRlZmF1bHRDaGVja2VkS2V5cyksIHRoaXMuZGF0YSwgJy0nKQogICAgICByZXR1cm4gZGF0YUtleU1hcAogICAgfSwKICAgIG9uSXRlbUNoZWNrZWQgKGl0ZW0pIHsKICAgICAgaWYgKHRoaXMuZGF0YUtleU1hcFtpdGVtLmtleV1bMF0gPT09ICdjaGVja2VkJykgewogICAgICAgIHRoaXMuc2V0QWxsQ2hpbGRyZW5TdGF0ZShpdGVtLmtleSwgJycpCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5zZXRBbGxDaGlsZHJlblN0YXRlKGl0ZW0ua2V5LCAnY2hlY2tlZCcpCiAgICAgIH0KICAgICAgdGhpcy5zZXRBbGxQYXJlbnRTdGF0ZShpdGVtLmtleSkKICAgICAgdGhpcy4kZW1pdCgnaXRlbS1jaGVja2VkJywgdGhpcy5nZXRDaGVja2VkS2V5cygpKQogICAgfSwKICAgIG9uSXRlbUNvbnRleHRtZW51IChpdGVtKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRLZXkgPSBpdGVtLmtleQogICAgICB0aGlzLiRlbWl0KCdpdGVtLWNvbnRleHRtZW51JywgaXRlbSkKICAgIH0sCiAgICBvbkl0ZW1EYmxjbGljayAoaXRlbSkgewogICAgICB0aGlzLiRlbWl0KCdpdGVtLWRibGNsaWNrJywgaXRlbSkKICAgIH0sCiAgICBvbkl0ZW1DbGljayAoaXRlbSkgewogICAgICB0aGlzLnNlbGVjdGVkS2V5ID0gaXRlbS5rZXkKICAgICAgdGhpcy4kZW1pdCgnaXRlbS1jbGljaycsIGl0ZW0pCiAgICB9LAogICAgb25JdGVtUmVtb3ZlIChkYXRhLCBpdGVtLCBpdGVtSW5kZXgsIGV2dCkgewogICAgICB0aGlzLiRlbWl0KCdpdGVtLXJlbW92ZScsIGRhdGEsIGl0ZW0sIGl0ZW1JbmRleCwgZXZ0KQogICAgfSwKICAgIGdldENoZWNrZWRLZXlzICgpIHsKICAgICAgLy8g6I635Y+W6YCJ5oup55qEa2V5cwogICAgICBsZXQgY2hlY2tlZEtleXMgPSBPYmplY3Qua2V5cyh0aGlzLmRhdGFLZXlNYXApLmZpbHRlcigoa2V5KSA9PiB7CiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YUtleU1hcFtrZXldWzBdID09PSAnY2hlY2tlZCcKICAgICAgfSkKICAgICAgcmV0dXJuIGNoZWNrZWRLZXlzLmZpbHRlcigoa2V5LCBpbmRleCkgPT4gewogICAgICAgIGZvciAobGV0IGsgb2YgY2hlY2tlZEtleXMpIHsKICAgICAgICAgIGlmIChrICE9PSBrZXkgJiYgdGhpcy5kYXRhS2V5TWFwW2tleV1bMl0gPT09IGspIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiB0cnVlCiAgICAgIH0pCiAgICB9LAogICAgc2V0QWxsQ2hpbGRyZW5TdGF0ZSAoa2V5LCBzdGF0ZSkgewogICAgICAvLyDorr7nva7miYDmnInlrZDoioLngrnnmoTnirbmgIEKICAgICAgdGhpcy5kYXRhS2V5TWFwW2tleV0uc3BsaWNlKDAsIDEsIHN0YXRlKQogICAgICB0aGlzLmRhdGFLZXlNYXBba2V5XVsxXSAmJiB0aGlzLmRhdGFLZXlNYXBba2V5XVsxXS5mb3JFYWNoKChjaGlsZCkgPT4gewogICAgICAgIHRoaXMuc2V0QWxsQ2hpbGRyZW5TdGF0ZShjaGlsZCwgc3RhdGUpCiAgICAgIH0pCiAgICB9LAogICAgc2V0QWxsUGFyZW50U3RhdGUgKGtleSkgewogICAgICAvLyDorr7nva7miYDmnInniLbkurLoioLngrnnmoTnirbmgIEKICAgICAgaWYgKHRoaXMuZGF0YUtleU1hcFtrZXldKSB7CiAgICAgICAgbGV0IHBhcmVudEtleSA9IHRoaXMuZGF0YUtleU1hcFtrZXldWzJdCiAgICAgICAgaWYgKHBhcmVudEtleSA9PT0gJycpIHJldHVybgogICAgICAgIGlmICh0aGlzLmRhdGFLZXlNYXBbcGFyZW50S2V5XSAmJiB0aGlzLmRhdGFLZXlNYXBbcGFyZW50S2V5XVsxXSkgewogICAgICAgICAgbGV0IHBhcmVudEFsbENoaWxkcmVuQ2hlY2tlZCA9IHRoaXMuZGF0YUtleU1hcFtwYXJlbnRLZXldWzFdLmV2ZXJ5KChjaGlsZCkgPT4gewogICAgICAgICAgICByZXR1cm4gdGhpcy5kYXRhS2V5TWFwW2NoaWxkXVswXSA9PT0gJ2NoZWNrZWQnCiAgICAgICAgICB9KQogICAgICAgICAgbGV0IHBhcmVudEFsbENoaWxkcmVuT3BlbiA9IHRoaXMuZGF0YUtleU1hcFtwYXJlbnRLZXldWzFdLnNvbWUoKGNoaWxkKSA9PiB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLmRhdGFLZXlNYXBbY2hpbGRdWzBdID09PSAnb3BlbicgfHwgdGhpcy5kYXRhS2V5TWFwW2NoaWxkXVswXSA9PT0gJ2NoZWNrZWQnCiAgICAgICAgICB9KQogICAgICAgICAgdGhpcy5kYXRhS2V5TWFwW3BhcmVudEtleV0uc3BsaWNlKDAsIDEsIHBhcmVudEFsbENoaWxkcmVuQ2hlY2tlZCA/ICdjaGVja2VkJyA6IChwYXJlbnRBbGxDaGlsZHJlbk9wZW4gPyAnb3BlbicgOiAnJykpCiAgICAgICAgfQogICAgICAgIHRoaXMuc2V0QWxsUGFyZW50U3RhdGUocGFyZW50S2V5KQogICAgICB9CiAgICB9CiAgfQp9Cgpjb25zdCBnZXRLZXlTdGF0ZSA9IChkYXRhS2V5c01hcCwgc2V0S2V5cywga2V5LCBwYXJlbnRLZXkpID0+IHsKICBpZiAoc2V0S2V5cy5oYXMoa2V5KSkgcmV0dXJuICdjaGVja2VkJwogIC8vIGNvbnNvbGUubG9nKCc6Ojo6OnNldEtleXM6Jywgc2V0S2V5cywgJywga2V5OicsIGtleSwgJywgZGF0YUtleXNNYXA6JywgZGF0YUtleXNNYXBbcGFyZW50S2V5XSkKICBmb3IgKGxldCBzZXRLZXkgb2Ygc2V0S2V5cy5rZXlzKCkpIHsKICAgIGlmIChzZXRLZXkuc3RhcnRzV2l0aChrZXkgKyAnLScpKSByZXR1cm4gJ29wZW4nCiAgICBpZiAoa2V5LnN0YXJ0c1dpdGgoc2V0S2V5KSkgcmV0dXJuICdjaGVja2VkJwogIH0KICByZXR1cm4gJycKfQpjb25zdCBpbml0RGF0YUtleXNNYXAgPSAoZGF0YUtleXNNYXAsIHNldEtleXMsIGl0ZW1zLCBwYXJlbnRLZXkpID0+IHsKICBpdGVtcyAmJiBpdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7CiAgICAvLyBjb25zb2xlLmxvZygnOjo6Ojo6JywgaXRlbSkKICAgIGRhdGFLZXlzTWFwW2l0ZW0ua2V5XSA9IFsKICAgICAgZ2V0S2V5U3RhdGUoZGF0YUtleXNNYXAsIHNldEtleXMsIGl0ZW0ua2V5LCBwYXJlbnRLZXkpLAogICAgICBpdGVtLmNoaWxkcmVuICYmIGl0ZW0uY2hpbGRyZW4ubWFwKChjaGlsZCkgPT4gY2hpbGQua2V5KSwKICAgICAgcGFyZW50S2V5XQogICAgaW5pdERhdGFLZXlzTWFwKGRhdGFLZXlzTWFwLCBzZXRLZXlzLCBpdGVtLmNoaWxkcmVuLCBpdGVtLmtleSkKICB9KQp9Cg=="},{"version":3,"sources":["Tree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAufile":"Tree.vue","sourceRoot":"node_modules/fish-ui/src/components","sourcesContent":["<template>\n  <fish-tree-node\n      :data=\"data\"\n      :multiple=\"multiple\"\n      :selected-key=\"selectedKey\"\n      :data-key-map=\"dataKeyMap\"\n      :expand=\"expand\"\n      :edited=\"edited\"\n      :checkabled=\"checkabled\"\n      :on-item-render=\"onItemRender\"\n      :iconCaretRight=\"iconCaretRight\"\n      :iconCaretDown=\"iconCaretDown\"\n      :on-item-checked=\"onItemChecked\"\n      :on-item-contextmenu=\"onItemContextmenu\"\n      :on-item-dblclick=\"onItemDblclick\"\n      :on-item-remove=\"onItemRemove\"\n      :on-item-click=\"onItemClick\" v-if=\"data && data.length > 0\">\n      <template slot-scope=\"item\">\n        <slot v-bind=\"item\"></slot>\n      </template>\n  </fish-tree-node>\n</template>\n<script>\n  import FishTreeNode from './TreeNode.vue'\n\n  export default {\n    components: {FishTreeNode},\n    name: 'fish-tree',\n    props: {\n      defaultSelectedKey: { type: String, default: '' },\n      defaultCheckedKeys: { type: Array, default: () => [] },\n      multiple: { type: Boolean, default: false },\n      expand: { type: Boolean, default: false },\n      checkabled: { type: Function, default: (multiple) => multiple },\n      data: { type: Array, required: true }, // [{title: '', key: '', children: '', disabled: false}]\n      edited: { type: Boolean, default: false },\n      onItemRender: { type: Function, default: (item) => item.title },\n      iconCaretRight: { type: String, default: 'fa fa-caret-right' },\n      iconCaretDown: { type: String, default: 'fa fa-caret-down' }\n    },\n    data () {\n      return {\n        selectedKey: this.defaultSelectedKey,\n        dataKeyMap: this.getResetDataKeyMap()\n      }\n    },\n    watch: {\n      defaultSelectedKey (nowVal, oldVal) {\n        this.selectedKey = nowVal\n      },\n      defaultCheckedKeys (nowVal, oldVal) {\n        this.dataKeyMap = this.getResetDataKeyMap()\n      }\n    },\n    methods: {\n      getResetDataKeyMap () {\n        const dataKeyMap = {}\n        initDataKeysMap(dataKeyMap, new Set(this.defaultCheckedKeys), this.data, '-')\n        return dataKeyMap\n      },\n      onItemChecked (item) {\n        if (this.dataKeyMap[item.key][0] === 'checked') {\n          this.setAllChildrenState(item.key, '')\n        } else {\n          this.setAllChildrenState(item.key, 'checked')\n        }\n        this.setAllParentState(item.key)\n        this.$emit('item-checked', this.getCheckedKeys())\n      },\n      onItemContextmenu (item) {\n        this.selectedKey = item.key\n        this.$emit('item-contextmenu', item)\n      },\n      onItemDblclick (item) {\n        this.$emit('item-dblclick', item)\n      },\n      onItemClick (item) {\n        this.selectedKey = item.key\n        this.$emit('item-click', item)\n      },\n      onItemRemove (data, item, itemIndex, evt) {\n        this.$emit('item-remove', data, item, itemIndex, evt)\n      },\n      getCheckedKeys () {\n        // 获取选择的keys\n        let checkedKeys = Object.keys(this.dataKeyMap).filter((key) => {\n          return this.dataKeyMap[key][0] === 'checked'\n        })\n        return checkedKeys.filter((key, index) => {\n          for (let k of checkedKeys) {\n            if (k !== key && this.dataKeyMap[key][2] === k) {\n              return false\n            }\n          }\n          return true\n        })\n      },\n      setAllChildrenState (key, state) {\n        // 设置所有子节点的状态\n        this.dataKeyMap[key].splice(0, 1, state)\n        this.dataKeyMap[key][1] && this.dataKeyMap[key][1].forEach((child) => {\n          this.setAllChildrenState(child, state)\n        })\n      },\n      setAllParentState (key) {\n        // 设置所有父亲节点的状态\n        if (this.dataKeyMap[key]) {\n          let parentKey = this.dataKeyMap[key][2]\n          if (parentKey === '') return\n          if (this.dataKeyMap[parentKey] && this.dataKeyMap[parentKey][1]) {\n            let parentAllChildrenChecked = this.dataKeyMap[parentKey][1].every((child) => {\n              return this.dataKeyMap[child][0] === 'checked'\n            })\n            let parentAllChildrenOpen = this.dataKeyMap[parentKey][1].some((child) => {\n              return this.dataKeyMap[child][0] === 'open' || this.dataKeyMap[child][0] === 'checked'\n            })\n            this.dataKeyMap[parentKey].splice(0, 1, parentAllChildrenChecked ? 'checked' : (parentAllChildrenOpen ? 'open' : ''))\n          }\n          this.setAllParentState(parentKey)\n        }\n      }\n    }\n  }\n\n  const getKeyState = (dataKeysMap, setKeys, key, parentKey) => {\n    if (setKeys.has(key)) return 'checked'\n    // console.log(':::::setKeys:', setKeys, ', key:', key, ', dataKeysMap:', dataKeysMap[parentKey])\n    for (let setKey of setKeys.keys()) {\n      if (setKey.startsWith(key + '-')) return 'open'\n      if (key.startsWith(setKey)) return 'checked'\n    }\n    return ''\n  }\n  const initDataKeysMap = (dataKeysMap, setKeys, items, parentKey) => {\n    items && items.forEach((item) => {\n      // console.log('::::::', item)\n      dataKeysMap[item.key] = [\n        getKeyState(dataKeysMap, setKeys, item.key, parentKey),\n        item.children && item.children.map((child) => child.key),\n        parentKey]\n      initDataKeysMap(dataKeysMap, setKeys, item.children, item.key)\n    })\n  }\n</script>\n"]}]}