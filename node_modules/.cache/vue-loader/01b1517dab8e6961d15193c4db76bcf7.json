{"remainingRequest":"C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\fish-ui\\src\\components\\Upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\fish-ui\\src\\components\\Upload.vue","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBhamF4IGZyb20gJy4vYWpheC5qcycKaW1wb3J0IGZpc2hNb2RhbCBmcm9tICcuL01vZGFsLnZ1ZScKaW1wb3J0IHsgbm90aWZ5IH0gZnJvbSAnLi4vY29uZmlnJwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHtmaXNoTW9kYWx9LAogIG5hbWU6ICdmaXNoLXVwbG9hZCcsCiAgcHJvcHM6IHsKICAgIHZhbHVlOiB7IHR5cGU6IEFycmF5IH0sIC8vIFt7bmFtZTogJycsIHVybDogJycsIHN0YXRlOiAnJ11dCiAgICB0eXBlOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogJ2xpc3QnIH0sIC8vIHBpY3R1cmUKICAgIGFjdGlvbjogeyB0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlIH0sCiAgICBtdWx0aXBsZTogeyB0eXBlOiBCb29sZWFuLCBkZWZhdWx0OiBmYWxzZSB9LAogICAgYWNjZXB0OiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogJyovKicgfSwKICAgIG1heFNpemU6IHsgdHlwZTogTnVtYmVyLCBkZWZhdWx0OiA1ICogMTAyNCAqIDEwMjQgfSwKICAgIHdpdGhDcmVkZW50aWFsczogeyB0eXBlOiBCb29sZWFuLCBkZWZhdWx0OiBmYWxzZSB9LCAvLyBodHRwIC4uCiAgICBwcmV2aWV3OiB7IHR5cGU6IEJvb2xlYW4sIGRlZmF1bHQ6IGZhbHNlIH0sCiAgICBoZWFkZXJzOiB7IHR5cGU6IE9iamVjdCB9LCAvLyBodHRwIGhlYWRlcnMKICAgIGRhdGE6IHsgdHlwZTogT2JqZWN0IH0sIC8vIGh0dHAgZGF0YQogICAgbmFtZTogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICdmaWxlJyB9LAogICAgb25TdGFydDogeyB0eXBlOiBGdW5jdGlvbiwgZGVmYXVsdDogKGZpbGUpID0+IHt9IH0sCiAgICBvblByb2dyZXNzOiB7IHR5cGU6IEZ1bmN0aW9uLCBkZWZhdWx0OiAoKSA9PiB7fSB9LAogICAgb25TdWNjZXNzOiB7IHR5cGU6IEZ1bmN0aW9uLCBkZWZhdWx0OiAoKSA9PiB7fSB9LAogICAgb25FcnJvcjogeyB0eXBlOiBGdW5jdGlvbiwgZGVmYXVsdDogKCkgPT4ge30gfSwKICAgIGZvcm1hdFVybEZyb21SZXNwb25zZTogeyB0eXBlOiBGdW5jdGlvbiwgZGVmYXVsdDogKHJlcykgPT4gcmVzIH0KICB9LAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgcHJldmlld1Nob3c6IGZhbHNlLAogICAgICBwcmV2aWV3VXJsOiAnJywKICAgICAgcmVxczoge30sCiAgICAgIHVwbG9hZGluZ0ZpbGVzOiBbXSAvLyDpgInmi6nkuIrkvKDnmoTmlofku7bliJfooagKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBhbGxGaWxlcyAoKSB7CiAgICAgIGlmICh0aGlzLnR5cGUgPT09ICdwaWN0dXJlJykgewogICAgICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMudmFsdWUpLmNvbmNhdCh0aGlzLnVwbG9hZGluZ0ZpbGVzKQogICAgICB9CiAgICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMudXBsb2FkaW5nRmlsZXMpLmNvbmNhdCh0aGlzLnZhbHVlKQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgcmVtb3ZlRmlsZSAoaW5kZXgpIHsKICAgICAgaWYgKHRoaXMudXBsb2FkaW5nRmlsZXMubGVuZ3RoID4gMCkgewogICAgICAgIHRoaXMuYWJvcnQodGhpcy51cGxvYWRpbmdGaWxlc1tpbmRleF0sIGluZGV4KQogICAgICAgIHRoaXMudXBsb2FkaW5nRmlsZXMuc3BsaWNlKGluZGV4LCAxKQogICAgICB9CiAgICAgIHRoaXMuZW1pdENoYW5nZSh0aGlzLnZhbHVlLmZpbHRlcigoZiwgaSkgPT4gaSAhPT0gaW5kZXgpKQogICAgfSwKICAgIGNsaWNrSGFuZGxlciAoKSB7CiAgICAgIHRoaXMuJHJlZnMuaW5wdXQuY2xpY2soKQogICAgfSwKICAgIHByZXZpZXdIYW5kbGVyIChmaWxlKSB7CiAgICAgIGlmICh0aGlzLnR5cGUgPT09ICdwaWN0dXJlJyAmJiB0aGlzLnByZXZpZXcpIHsKICAgICAgICB0aGlzLnByZXZpZXdVcmwgPSBmaWxlLnVybAogICAgICAgIHRoaXMucHJldmlld1Nob3cgPSB0cnVlCiAgICAgIH0KICAgIH0sCiAgICBjaGFuZ2VIYW5kbGVyIChldnQpIHsKICAgICAgaWYgKHRoaXMucmVxcy5sZW5ndGggPiAwKSByZXR1cm4KICAgICAgbGV0IGZpbGVzID0gZXZ0LnRhcmdldC5maWxlcwogICAgICAvLyBjb25zb2xlLmxvZygnZmlsZXM6JywgZXZ0LnRhcmdldC5maWxlcykKICAgICAgaWYgKCFmaWxlcykgcmV0dXJuCiAgICAgIGZpbGVzID0gQXJyYXkuZnJvbShmaWxlcykKICAgICAgaWYgKCF0aGlzLm11bHRpcGxlKSBmaWxlcyA9IFtmaWxlc1swXV0KICAgICAgaWYgKGZpbGVzLmxlbmd0aCA8PSAwKSByZXR1cm4KCiAgICAgIHRoaXMudXBsb2FkaW5nRmlsZXMgPSBmaWxlcwogICAgICBmaWxlcy5mb3JFYWNoKChmaWxlKSA9PiB7IGZpbGUuc3RhdGUgPSAncHJvZ3Jlc3MnIH0pCiAgICAgIGZpbGVzLmZvckVhY2goKGZpbGUsIGluZGV4KSA9PiB7CiAgICAgICAgdGhpcy51cGxvYWQoZmlsZSwgaW5kZXgpCiAgICAgIH0pCiAgICB9LAogICAgdXBsb2FkIChmaWxlLCBpbmRleCkgewogICAgICB0aGlzLiRyZWZzLmlucHV0LnZhbHVlID0gbnVsbAogICAgICB0aGlzLnBvc3QoZmlsZSwgaW5kZXgpCiAgICB9LAogICAgYWJvcnQgKGZpbGUsIGlkKSB7CiAgICAgIGlmICh0aGlzLnJlcXNbaWRdKSB7CiAgICAgICAgdGhpcy5yZXFzW2lkXS5hYm9ydCgpCiAgICAgIH0KICAgIH0sCiAgICBwb3N0IChmaWxlLCBpZCkgewogICAgICBwcmV2aWV3RmlsZShmaWxlLCAocmVzdWx0KSA9PiB7IGZpbGUuX3VybCA9IHJlc3VsdCB9KQogICAgICAvLyBjb25zb2xlLmxvZygnZmlsZS5fdXJsJywgZmlsZSkKICAgICAgY29uc3Qgb3B0aW9ucyA9IHsKICAgICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsCiAgICAgICAgd2l0aENyZWRlbnRpYWxzOiB0aGlzLndpdGhDcmVkZW50aWFscywKICAgICAgICBmaWxlOiBmaWxlLAogICAgICAgIGRhdGE6IHRoaXMuZGF0YSwKICAgICAgICBmaWxlbmFtZTogdGhpcy5uYW1lLAogICAgICAgIGFjdGlvbjogdGhpcy5hY3Rpb24sCiAgICAgICAgb25Qcm9ncmVzczogZSA9PiB7CiAgICAgICAgICBmaWxlLnBlcmNlbnQgPSBwYXJzZUludChlLnBlcmNlbnQpCiAgICAgICAgICB0aGlzLnVwbG9hZGluZ0ZpbGVzLnNwbGljZShpZCwgMSwgZmlsZSkKICAgICAgICAgIHRoaXMub25Qcm9ncmVzcyhlLCBmaWxlKQogICAgICAgIH0sCiAgICAgICAgb25TdWNjZXNzOiByZXMgPT4gewogICAgICAgICAgLy8gY29uc29sZS5sb2cocmVzKQogICAgICAgICAgZGVsZXRlIHRoaXMucmVxc1tpZF0KICAgICAgICAgIGZpbGUuc3RhdGUgPSAnZG9uZScKICAgICAgICAgIGZpbGUudXJsID0gdGhpcy5mb3JtYXRVcmxGcm9tUmVzcG9uc2UocmVzKQogICAgICAgICAgdGhpcy51cGxvYWRpbmdGaWxlcy5zcGxpY2UoaWQsIDEsIGZpbGUpCiAgICAgICAgICB0aGlzLm9uU3VjY2VzcyhyZXMsIGZpbGUpCiAgICAgICAgICBpZiAoT2JqZWN0LmtleXModGhpcy5yZXFzKS5sZW5ndGggPD0gMCAmJiB0aGlzLnZhbHVlKSB7CiAgICAgICAgICAgIGxldCBuVmFsdWUgPSBBcnJheS5mcm9tKHRoaXMudmFsdWUpCiAgICAgICAgICAgIHRoaXMudXBsb2FkaW5nRmlsZXMuZm9yRWFjaCgoZikgPT4gewogICAgICAgICAgICAgIGlmIChmLnN0YXRlID09PSAnZG9uZScpIHsKICAgICAgICAgICAgICAgIG5WYWx1ZS5wdXNoKHtuYW1lOiBmLm5hbWUsIHVybDogZi51cmwsIF91cmw6IGYuX3VybH0pCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQogICAgICAgICAgICBjb25zb2xlLmxvZyhuVmFsdWUpCiAgICAgICAgICAgIHRoaXMudXBsb2FkaW5nRmlsZXMgPSBbXQogICAgICAgICAgICB0aGlzLmVtaXRDaGFuZ2UoblZhbHVlKQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgb25FcnJvcjogKGVyciwgcmVzKSA9PiB7CiAgICAgICAgICBmaWxlLnN0YXRlID0gJ2Vycm9yJwogICAgICAgICAgdGhpcy51cGxvYWRpbmdGaWxlcy5zcGxpY2UoaWQsIDEsIGZpbGUpCiAgICAgICAgICB0aGlzLm9uRXJyb3IoZXJyLCByZXMsIGZpbGUpCiAgICAgICAgICBkZWxldGUgdGhpcy5yZXFzW2lkXQogICAgICAgIH0KICAgICAgfQoKICAgICAgdGhpcy5vblN0YXJ0KGZpbGUpCiAgICAgIGNvbnN0IHJlcSA9IGFqYXgob3B0aW9ucykKICAgICAgdGhpcy5yZXFzW2lkXSA9IHJlcQogICAgICBpZiAocmVxICYmIHJlcS50aGVuKSB7CiAgICAgICAgcmVxLnRoZW4ob3B0aW9ucy5vblN1Y2Nlc3MsIG9wdGlvbnMub25FcnJvcikKICAgICAgfQogICAgfSwKICAgIGVtaXRDaGFuZ2UgKHYpIHsKICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB2KQogICAgICBub3RpZnkuZmllbGQuY2hhbmdlKHRoaXMpCiAgICB9CiAgfQp9Cgpjb25zdCBwcmV2aWV3RmlsZSA9IChmaWxlLCBjYWxsYmFjaykgPT4gewogIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCkKICByZWFkZXIub25sb2FkZW5kID0gKCkgPT4gY2FsbGJhY2socmVhZGVyLnJlc3VsdCkKICByZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKQp9Cg=="},{"version":3,"sources":["Upload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"Upload.vue","sourceRoot":"node_modules/fish-ui/src/components","sourcesContent":["<template>\n  <div>\n    <div :class=\"['fish upload', type]\">\n      <div class=\"upload-select\" @click=\"clickHandler\" v-if=\"type === 'list' || type == ''\">\n        <input type=\"file\" ref=\"input\"\n               @change=\"changeHandler\"\n               :multiple=\"multiple\"\n               :accept=\"accept\"/>\n        <slot></slot>\n      </div>\n      <ul>\n        <li v-for=\"(file, index) in allFiles\" :class=\"[file.state || 'done', `percent-${file.percent}`]\" :key=\"index\">\n          <template v-if=\"type === 'picture'\">\n            <img :src=\"file._url || file.url\" v-if=\"type === 'picture' && file.state !== 'progress'\"/>\n            <div class=\"info\" @click=\"previewHandler(file)\">\n              <i @click.stop=\"removeFile(index)\">&times;</i>\n            </div>\n          </template>\n          <template v-else>\n            {{ file.name }}\n            <i class=\"close\" @click.stop=\"removeFile(index)\">&times;</i>\n          </template>\n        </li>\n      </ul>\n      <div class=\"upload-select\" @click=\"clickHandler\" v-if=\"type === 'picture'\">\n        <input type=\"file\" ref=\"input\"\n               @change=\"changeHandler\"\n               :multiple=\"multiple\"\n               :accept=\"accept\"/>\n        <i>+</i>\n        <slot></slot>\n      </div>\n      <fish-modal :visible.sync=\"previewShow\" title=\"Image Preview\">\n        <div class=\"image\"><img :src=\"previewUrl\" style=\"width: 100%;\"/></div>\n      </fish-modal>\n    </div>\n  </div>\n</template>\n<script>\n  import ajax from './ajax.js'\n  import fishModal from './Modal.vue'\n  import { notify } from '../config'\n\n  export default {\n    components: {fishModal},\n    name: 'fish-upload',\n    props: {\n      value: { type: Array }, // [{name: '', url: '', state: '']]\n      type: { type: String, default: 'list' }, // picture\n      action: { type: String, required: true },\n      multiple: { type: Boolean, default: false },\n      accept: { type: String, default: '*/*' },\n      maxSize: { type: Number, default: 5 * 1024 * 1024 },\n      withCredentials: { type: Boolean, default: false }, // http ..\n      preview: { type: Boolean, default: false },\n      headers: { type: Object }, // http headers\n      data: { type: Object }, // http data\n      name: { type: String, default: 'file' },\n      onStart: { type: Function, default: (file) => {} },\n      onProgress: { type: Function, default: () => {} },\n      onSuccess: { type: Function, default: () => {} },\n      onError: { type: Function, default: () => {} },\n      formatUrlFromResponse: { type: Function, default: (res) => res }\n    },\n    data () {\n      return {\n        previewShow: false,\n        previewUrl: '',\n        reqs: {},\n        uploadingFiles: [] // 选择上传的文件列表\n      }\n    },\n    computed: {\n      allFiles () {\n        if (this.type === 'picture') {\n          return Array.from(this.value).concat(this.uploadingFiles)\n        }\n        return Array.from(this.uploadingFiles).concat(this.value)\n      }\n    },\n    methods: {\n      removeFile (index) {\n        if (this.uploadingFiles.length > 0) {\n          this.abort(this.uploadingFiles[index], index)\n          this.uploadingFiles.splice(index, 1)\n        }\n        this.emitChange(this.value.filter((f, i) => i !== index))\n      },\n      clickHandler () {\n        this.$refs.input.click()\n      },\n      previewHandler (file) {\n        if (this.type === 'picture' && this.preview) {\n          this.previewUrl = file.url\n          this.previewShow = true\n        }\n      },\n      changeHandler (evt) {\n        if (this.reqs.length > 0) return\n        let files = evt.target.files\n        // console.log('files:', evt.target.files)\n        if (!files) return\n        files = Array.from(files)\n        if (!this.multiple) files = [files[0]]\n        if (files.length <= 0) return\n\n        this.uploadingFiles = files\n        files.forEach((file) => { file.state = 'progress' })\n        files.forEach((file, index) => {\n          this.upload(file, index)\n        })\n      },\n      upload (file, index) {\n        this.$refs.input.value = null\n        this.post(file, index)\n      },\n      abort (file, id) {\n        if (this.reqs[id]) {\n          this.reqs[id].abort()\n        }\n      },\n      post (file, id) {\n        previewFile(file, (result) => { file._url = result })\n        // console.log('file._url', file)\n        const options = {\n          headers: this.headers,\n          withCredentials: this.withCredentials,\n          file: file,\n          data: this.data,\n          filename: this.name,\n          action: this.action,\n          onProgress: e => {\n            file.percent = parseInt(e.percent)\n            this.uploadingFiles.splice(id, 1, file)\n            this.onProgress(e, file)\n          },\n          onSuccess: res => {\n            // console.log(res)\n            delete this.reqs[id]\n            file.state = 'done'\n            file.url = this.formatUrlFromResponse(res)\n            this.uploadingFiles.splice(id, 1, file)\n            this.onSuccess(res, file)\n            if (Object.keys(this.reqs).length <= 0 && this.value) {\n              let nValue = Array.from(this.value)\n              this.uploadingFiles.forEach((f) => {\n                if (f.state === 'done') {\n                  nValue.push({name: f.name, url: f.url, _url: f._url})\n                }\n              })\n              console.log(nValue)\n              this.uploadingFiles = []\n              this.emitChange(nValue)\n            }\n          },\n          onError: (err, res) => {\n            file.state = 'error'\n            this.uploadingFiles.splice(id, 1, file)\n            this.onError(err, res, file)\n            delete this.reqs[id]\n          }\n        }\n\n        this.onStart(file)\n        const req = ajax(options)\n        this.reqs[id] = req\n        if (req && req.then) {\n          req.then(options.onSuccess, options.onError)\n        }\n      },\n      emitChange (v) {\n        this.$emit('input', v)\n        notify.field.change(this)\n      }\n    }\n  }\n\n  const previewFile = (file, callback) => {\n    const reader = new FileReader()\n    reader.onloadend = () => callback(reader.result)\n    reader.readAsDataURL(file)\n  }\n</script>\n"]}]}