{"remainingRequest":"C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\fish-ui\\src\\components\\Field.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\fish-ui\\src\\components\\Field.vue","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IHNwYW5XaWR0aCA9IDQuMTY2NjYKY29uc3Qgbm9vcCA9ICgpID0+IHt9CmltcG9ydCBBc3luY1ZhbGlkYXRvciBmcm9tICdhc3luYy12YWxpZGF0b3InCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2Zpc2gtZmllbGQnLAogIHByb3BzOiB7CiAgICBsYWJlbDogeyB0eXBlOiBTdHJpbmcgfSwKICAgIGxhYmVsV2lkdGg6IHsgdHlwZTogW051bWJlciwgU3RyaW5nXSwgZGVmYXVsdDogJ2F1dG8nIH0sCiAgICBsYWJlbEFsaWduOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogJ3JpZ2h0JyB9LAogICAgc3BhbjogeyB0eXBlOiBbU3RyaW5nLCBOdW1iZXJdLCBkZWZhdWx0OiAwIH0sCiAgICBkaXNhYmxlZDogeyB0eXBlOiBCb29sZWFuLCBkZWZhdWx0OiBmYWxzZSB9LAogICAgaW5saW5lOiB7IHR5cGU6IEJvb2xlYW4sIGRlZmF1bHQ6IGZhbHNlIH0sCiAgICBzaG93RXJyb3I6IHsgdHlwZTogQm9vbGVhbiwgZGVmYXVsdDogdHJ1ZSB9LAogICAgbmFtZTogeyB0eXBlOiBTdHJpbmcgfSwgLy8g6ZyA5qCh6aqM55qE5a2X5q615ZCNCiAgICBydWxlczogeyB0eXBlOiBBcnJheSB9IC8vIOmqjOivgeinhOWImQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGxhYmxlU3R5bGUgKCkgewogICAgICBjb25zdCB7IGlubGluZSwgbGFiZWxXaWR0aCwgbGFiZWxBbGlnbiB9ID0gdGhpcwogICAgICBjb25zdCByZXQgPSB7fQogICAgICBpZiAoaW5saW5lKSB7CiAgICAgICAgcmV0Wyd0ZXh0LWFsaWduJ10gPSBsYWJlbEFsaWduCiAgICAgICAgaWYgKGxhYmVsV2lkdGggIT09ICdhdXRvJykgewogICAgICAgICAgLy8gY29uc29sZS5sb2cobGFiZWxXaWR0aCwgbGFiZWxXaWR0aCBpbnN0YW5jZW9mIE51bWJlcikKICAgICAgICAgIGlmIChOdW1iZXIuaXNGaW5pdGUobGFiZWxXaWR0aCkpIHsKICAgICAgICAgICAgcmV0Wyd3aWR0aCddID0gYCR7bGFiZWxXaWR0aH0lYAogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0Wyd3aWR0aCddID0gbGFiZWxXaWR0aAogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgICByZXR1cm4gcmV0CiAgICB9LAogICAgY29udGVudFdyYXBwZXJTdHlsZSAoKSB7CiAgICAgIGNvbnN0IHsgaW5saW5lLCBsYWJlbFdpZHRoIH0gPSB0aGlzCiAgICAgIGNvbnN0IHJldCA9IHt9CiAgICAgIGlmIChpbmxpbmUpIHsKICAgICAgICBpZiAobGFiZWxXaWR0aCAhPT0gJ2F1dG8nKSB7CiAgICAgICAgICBpZiAoTnVtYmVyLmlzRmluaXRlKGxhYmVsV2lkdGgpKSB7CiAgICAgICAgICAgIHJldFsnd2lkdGgnXSA9IGAkezEwMCAtIGxhYmVsV2lkdGh9JWAKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuIHJldAogICAgfSwKICAgIHN0eWxlT2JqZWN0ICgpIHsKICAgICAgY29uc3QgeyBzcGFuIH0gPSB0aGlzCiAgICAgIGlmIChzcGFuID09PSAwKSByZXR1cm4ge30KICAgICAgcmV0dXJuIHsKICAgICAgICB3aWR0aDogYCR7c3BhbldpZHRoICogcGFyc2VJbnQoc3BhbiArICcnKX0lYAogICAgICB9CiAgICB9LAogICAgZmllbGQgKCkgewogICAgICByZXR1cm4gdGhpcy4kY2hpbGRyZW5bMF0KICAgIH0sCiAgICBmaWVsZFZhbHVlICgpIHsKICAgICAgcmV0dXJuIHRoaXMuZmllbGQgJiYgdGhpcy5maWVsZC52YWx1ZQogICAgfSwKICAgIHJlcXVpcmVkICgpIHsKICAgICAgY29uc3QgeyBydWxlcyB9ID0gdGhpcwogICAgICBpZiAocnVsZXMgJiYgcnVsZXMubGVuZ3RoID4gMCkgewogICAgICAgIGZvciAobGV0IHJ1bGUgb2YgcnVsZXMpIHsKICAgICAgICAgIGlmIChydWxlLnJlcXVpcmVkKSByZXR1cm4gdHJ1ZQogICAgICAgIH0KICAgICAgfQogICAgICByZXR1cm4gZmFsc2UKICAgIH0KICB9LAogIG1vdW50ZWQgKCkgewogICAgdGhpcy5vbGRWYWx1ZSA9IHRoaXMuZmllbGRWYWx1ZQogIH0sCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBvbGRWYWx1ZTogbnVsbCwKICAgICAgY2hlY2tlZDoge3N0YXRlOiAnJywgbWVzc2FnZTogJyd9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICB2YWxpZGF0ZSAoY2IgPSBub29wKSB7CiAgICAgIGNvbnN0IHsgcnVsZXMsIGZpZWxkVmFsdWUsIGNoZWNrZWQgfSA9IHRoaXMKICAgICAgY29uc3QgbmFtZSA9IHRoaXMubGFiZWwgfHwgdGhpcy5uYW1lCiAgICAgIGxldCBuUnVsZXMgPSBydWxlcwogICAgICBpZiAoIW5SdWxlcyB8fCBuUnVsZXMubGVuZ3RoID09PSAwKSB7CiAgICAgICAgY2IoKQogICAgICAgIHJldHVybiB0cnVlCiAgICAgIH0KCiAgICAgIGxldCBkZXNjcmlwdG9yID0ge30KICAgICAgZGVzY3JpcHRvcltuYW1lXSA9IG5SdWxlcwogICAgICBjb25zdCB2YWxpZGF0b3IgPSBuZXcgQXN5bmNWYWxpZGF0b3IoZGVzY3JpcHRvcikKCiAgICAgIGxldCBtb2RlbCA9IHt9CiAgICAgIG1vZGVsW25hbWVdID0gZmllbGRWYWx1ZQogICAgICB2YWxpZGF0b3IudmFsaWRhdGUobW9kZWwsIHsgZmlyc3RGaWVsZHM6IHRydWUgfSwgKGVycm9ycywgZmllbGRzKSA9PiB7CiAgICAgICAgY2hlY2tlZC5zdGF0ZSA9IGVycm9ycyA/ICdlcnJvcicgOiAnJwogICAgICAgIGNoZWNrZWQubWVzc2FnZSA9IGVycm9ycyA/IGVycm9yc1swXS5tZXNzYWdlIDogJycKICAgICAgICBjYihlcnJvcnMpCiAgICAgIH0pCiAgICB9LAogICAgZmllbGRWYWx1ZUNoYW5nZSAoKSB7IC8vIOWtkOe7hOS7tumAmuefpeiwg+eUqOWHveaVsAogICAgICB0aGlzLnZhbGlkYXRlKCkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["Field.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Field.vue","sourceRoot":"node_modules/fish-ui/src/components","sourcesContent":["<template>\n  <div :class=\"['field', {'inline': inline, 'disabled': disabled, 'required': required}, checked.state]\" :style=\"styleObject\">\n    <label v-if=\"label\" class=\"label\" :style=\"lableStyle\">{{ label }}</label>\n    <div :style=\"contentWrapperStyle\"><slot></slot></div>\n    <div class=\"tip\" v-if=\"showError && checked.state === 'error'\">{{ checked.message }}</div>\n  </div>\n</template>\n<script>\n  const spanWidth = 4.16666\n  const noop = () => {}\n  import AsyncValidator from 'async-validator'\n\n  export default {\n    name: 'fish-field',\n    props: {\n      label: { type: String },\n      labelWidth: { type: [Number, String], default: 'auto' },\n      labelAlign: { type: String, default: 'right' },\n      span: { type: [String, Number], default: 0 },\n      disabled: { type: Boolean, default: false },\n      inline: { type: Boolean, default: false },\n      showError: { type: Boolean, default: true },\n      name: { type: String }, // 需校验的字段名\n      rules: { type: Array } // 验证规则\n    },\n    computed: {\n      lableStyle () {\n        const { inline, labelWidth, labelAlign } = this\n        const ret = {}\n        if (inline) {\n          ret['text-align'] = labelAlign\n          if (labelWidth !== 'auto') {\n            // console.log(labelWidth, labelWidth instanceof Number)\n            if (Number.isFinite(labelWidth)) {\n              ret['width'] = `${labelWidth}%`\n            } else {\n              ret['width'] = labelWidth\n            }\n          }\n        }\n        return ret\n      },\n      contentWrapperStyle () {\n        const { inline, labelWidth } = this\n        const ret = {}\n        if (inline) {\n          if (labelWidth !== 'auto') {\n            if (Number.isFinite(labelWidth)) {\n              ret['width'] = `${100 - labelWidth}%`\n            }\n          }\n        }\n        return ret\n      },\n      styleObject () {\n        const { span } = this\n        if (span === 0) return {}\n        return {\n          width: `${spanWidth * parseInt(span + '')}%`\n        }\n      },\n      field () {\n        return this.$children[0]\n      },\n      fieldValue () {\n        return this.field && this.field.value\n      },\n      required () {\n        const { rules } = this\n        if (rules && rules.length > 0) {\n          for (let rule of rules) {\n            if (rule.required) return true\n          }\n        }\n        return false\n      }\n    },\n    mounted () {\n      this.oldValue = this.fieldValue\n    },\n    data () {\n      return {\n        oldValue: null,\n        checked: {state: '', message: ''}\n      }\n    },\n    methods: {\n      validate (cb = noop) {\n        const { rules, fieldValue, checked } = this\n        const name = this.label || this.name\n        let nRules = rules\n        if (!nRules || nRules.length === 0) {\n          cb()\n          return true\n        }\n\n        let descriptor = {}\n        descriptor[name] = nRules\n        const validator = new AsyncValidator(descriptor)\n\n        let model = {}\n        model[name] = fieldValue\n        validator.validate(model, { firstFields: true }, (errors, fields) => {\n          checked.state = errors ? 'error' : ''\n          checked.message = errors ? errors[0].message : ''\n          cb(errors)\n        })\n      },\n      fieldValueChange () { // 子组件通知调用函数\n        this.validate()\n      }\n    }\n  }\n</script>\n"]}]}