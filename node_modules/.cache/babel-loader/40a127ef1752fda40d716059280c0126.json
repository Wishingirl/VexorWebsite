{"remainingRequest":"C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\fish-ui\\src\\components\\Tree.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\fish-ui\\src\\components\\Tree.vue","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\user\\Desktop\\vue\\site\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Tree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,OAAA,YAAA,MAAA,gBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,YAAA,EAAA;AAAA,GADA;AAEA,EAAA,IAAA,EAAA,WAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,kBAAA,EAAA;AAAA,MAAA,IAAA,EAAA,MAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KADA;AAEA,IAAA,kBAAA,EAAA;AAAA,MAAA,IAAA,EAAA,KAAA;AAAA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAAA,KAFA;AAGA,IAAA,QAAA,EAAA;AAAA,MAAA,IAAA,EAAA,OAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KAHA;AAIA,IAAA,MAAA,EAAA;AAAA,MAAA,IAAA,EAAA,OAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KAJA;AAKA,IAAA,UAAA,EAAA;AAAA,MAAA,IAAA,EAAA,QAAA;AAAA,MAAA,OAAA,EAAA,kBAAA,QAAA;AAAA,eAAA,QAAA;AAAA;AAAA,KALA;AAMA,IAAA,IAAA,EAAA;AAAA,MAAA,IAAA,EAAA,KAAA;AAAA,MAAA,QAAA,EAAA;AAAA,KANA;AAMA;AACA,IAAA,MAAA,EAAA;AAAA,MAAA,IAAA,EAAA,OAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KAPA;AAQA,IAAA,YAAA,EAAA;AAAA,MAAA,IAAA,EAAA,QAAA;AAAA,MAAA,OAAA,EAAA,kBAAA,IAAA;AAAA,eAAA,IAAA,CAAA,KAAA;AAAA;AAAA,KARA;AASA,IAAA,cAAA,EAAA;AAAA,MAAA,IAAA,EAAA,MAAA;AAAA,MAAA,OAAA,EAAA;AAAA,KATA;AAUA,IAAA,aAAA,EAAA;AAAA,MAAA,IAAA,EAAA,MAAA;AAAA,MAAA,OAAA,EAAA;AAAA;AAVA,GAHA;AAeA,EAAA,IAfA,kBAeA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,KAAA,kBADA;AAEA,MAAA,UAAA,EAAA,KAAA,kBAAA;AAFA,KAAA;AAIA,GApBA;AAqBA,EAAA,KAAA,EAAA;AACA,IAAA,kBADA,8BACA,MADA,EACA,MADA,EACA;AACA,WAAA,WAAA,GAAA,MAAA;AACA,KAHA;AAIA,IAAA,kBAJA,8BAIA,MAJA,EAIA,MAJA,EAIA;AACA,WAAA,UAAA,GAAA,KAAA,kBAAA,EAAA;AACA;AANA,GArBA;AA6BA,EAAA,OAAA,EAAA;AACA,IAAA,kBADA,gCACA;AACA,UAAA,UAAA,GAAA,EAAA;AACA,MAAA,eAAA,CAAA,UAAA,EAAA,IAAA,GAAA,CAAA,KAAA,kBAAA,CAAA,EAAA,KAAA,IAAA,EAAA,GAAA,CAAA;AACA,aAAA,UAAA;AACA,KALA;AAMA,IAAA,aANA,yBAMA,IANA,EAMA;AACA,UAAA,KAAA,UAAA,CAAA,IAAA,CAAA,GAAA,EAAA,CAAA,MAAA,SAAA,EAAA;AACA,aAAA,mBAAA,CAAA,IAAA,CAAA,GAAA,EAAA,EAAA;AACA,OAFA,MAEA;AACA,aAAA,mBAAA,CAAA,IAAA,CAAA,GAAA,EAAA,SAAA;AACA;;AACA,WAAA,iBAAA,CAAA,IAAA,CAAA,GAAA;AACA,WAAA,KAAA,CAAA,cAAA,EAAA,KAAA,cAAA,EAAA;AACA,KAdA;AAeA,IAAA,iBAfA,6BAeA,IAfA,EAeA;AACA,WAAA,WAAA,GAAA,IAAA,CAAA,GAAA;AACA,WAAA,KAAA,CAAA,kBAAA,EAAA,IAAA;AACA,KAlBA;AAmBA,IAAA,cAnBA,0BAmBA,IAnBA,EAmBA;AACA,WAAA,KAAA,CAAA,eAAA,EAAA,IAAA;AACA,KArBA;AAsBA,IAAA,WAtBA,uBAsBA,IAtBA,EAsBA;AACA,WAAA,WAAA,GAAA,IAAA,CAAA,GAAA;AACA,WAAA,KAAA,CAAA,YAAA,EAAA,IAAA;AACA,KAzBA;AA0BA,IAAA,YA1BA,wBA0BA,IA1BA,EA0BA,IA1BA,EA0BA,SA1BA,EA0BA,GA1BA,EA0BA;AACA,WAAA,KAAA,CAAA,aAAA,EAAA,IAAA,EAAA,IAAA,EAAA,SAAA,EAAA,GAAA;AACA,KA5BA;AA6BA,IAAA,cA7BA,4BA6BA;AAAA;;AACA;AACA,UAAA,WAAA,GAAA,MAAA,CAAA,IAAA,CAAA,KAAA,UAAA,EAAA,MAAA,CAAA,UAAA,GAAA,EAAA;AACA,eAAA,KAAA,CAAA,UAAA,CAAA,GAAA,EAAA,CAAA,MAAA,SAAA;AACA,OAFA,CAAA;AAGA,aAAA,WAAA,CAAA,MAAA,CAAA,UAAA,GAAA,EAAA,KAAA,EAAA;AAAA,mDACA,WADA;AAAA;;AAAA;AACA,8DAAA;AAAA,gBAAA,CAAA;;AACA,gBAAA,CAAA,KAAA,GAAA,IAAA,KAAA,CAAA,UAAA,CAAA,GAAA,EAAA,CAAA,MAAA,CAAA,EAAA;AACA,qBAAA,KAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAA,IAAA;AACA,OAPA,CAAA;AAQA,KA1CA;AA2CA,IAAA,mBA3CA,+BA2CA,GA3CA,EA2CA,KA3CA,EA2CA;AAAA;;AACA;AACA,WAAA,UAAA,CAAA,GAAA,EAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,KAAA;AACA,WAAA,UAAA,CAAA,GAAA,EAAA,CAAA,KAAA,KAAA,UAAA,CAAA,GAAA,EAAA,CAAA,EAAA,OAAA,CAAA,UAAA,KAAA,EAAA;AACA,QAAA,MAAA,CAAA,mBAAA,CAAA,KAAA,EAAA,KAAA;AACA,OAFA,CAAA;AAGA,KAjDA;AAkDA,IAAA,iBAlDA,6BAkDA,GAlDA,EAkDA;AAAA;;AACA;AACA,UAAA,KAAA,UAAA,CAAA,GAAA,CAAA,EAAA;AACA,YAAA,SAAA,GAAA,KAAA,UAAA,CAAA,GAAA,EAAA,CAAA,CAAA;AACA,YAAA,SAAA,KAAA,EAAA,EAAA;;AACA,YAAA,KAAA,UAAA,CAAA,SAAA,KAAA,KAAA,UAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AACA,cAAA,wBAAA,GAAA,KAAA,UAAA,CAAA,SAAA,EAAA,CAAA,EAAA,KAAA,CAAA,UAAA,KAAA,EAAA;AACA,mBAAA,MAAA,CAAA,UAAA,CAAA,KAAA,EAAA,CAAA,MAAA,SAAA;AACA,WAFA,CAAA;AAGA,cAAA,qBAAA,GAAA,KAAA,UAAA,CAAA,SAAA,EAAA,CAAA,EAAA,IAAA,CAAA,UAAA,KAAA,EAAA;AACA,mBAAA,MAAA,CAAA,UAAA,CAAA,KAAA,EAAA,CAAA,MAAA,MAAA,IAAA,MAAA,CAAA,UAAA,CAAA,KAAA,EAAA,CAAA,MAAA,SAAA;AACA,WAFA,CAAA;AAGA,eAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,wBAAA,GAAA,SAAA,GAAA,qBAAA,GAAA,MAAA,GAAA,EAAA;AACA;;AACA,aAAA,iBAAA,CAAA,SAAA;AACA;AACA;AAlEA;AA7BA,CAAA;;AAmGA,IAAA,WAAA,GAAA,SAAA,WAAA,CAAA,WAAA,EAAA,OAAA,EAAA,GAAA,EAAA,SAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,EAAA,OAAA,SAAA,CADA,CAEA;;AAFA,8CAGA,OAAA,CAAA,IAAA,EAHA;AAAA;;AAAA;AAGA,2DAAA;AAAA,UAAA,MAAA;AACA,UAAA,MAAA,CAAA,UAAA,CAAA,GAAA,GAAA,GAAA,CAAA,EAAA,OAAA,MAAA;AACA,UAAA,GAAA,CAAA,UAAA,CAAA,MAAA,CAAA,EAAA,OAAA,SAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;;AAOA,SAAA,EAAA;AACA,CARA;;AASA,IAAA,eAAA,GAAA,SAAA,eAAA,CAAA,WAAA,EAAA,OAAA,EAAA,KAAA,EAAA,SAAA,EAAA;AACA,EAAA,KAAA,IAAA,KAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA;AACA,IAAA,WAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,CACA,WAAA,CAAA,WAAA,EAAA,OAAA,EAAA,IAAA,CAAA,GAAA,EAAA,SAAA,CADA,EAEA,IAAA,CAAA,QAAA,IAAA,IAAA,CAAA,QAAA,CAAA,GAAA,CAAA,UAAA,KAAA;AAAA,aAAA,KAAA,CAAA,GAAA;AAAA,KAAA,CAFA,EAGA,SAHA,CAAA;AAIA,IAAA,eAAA,CAAA,WAAA,EAAA,OAAA,EAAA,IAAA,CAAA,QAAA,EAAA,IAAA,CAAA,GAAA,CAAA;AACA,GAPA,CAAA;AAQA,CATA","sourcesContent":["<template>\n  <fish-tree-node\n      :data=\"data\"\n      :multiple=\"multiple\"\n      :selected-key=\"selectedKey\"\n      :data-key-map=\"dataKeyMap\"\n      :expand=\"expand\"\n      :edited=\"edited\"\n      :checkabled=\"checkabled\"\n      :on-item-render=\"onItemRender\"\n      :iconCaretRight=\"iconCaretRight\"\n      :iconCaretDown=\"iconCaretDown\"\n      :on-item-checked=\"onItemChecked\"\n      :on-item-contextmenu=\"onItemContextmenu\"\n      :on-item-dblclick=\"onItemDblclick\"\n      :on-item-remove=\"onItemRemove\"\n      :on-item-click=\"onItemClick\" v-if=\"data && data.length > 0\">\n      <template slot-scope=\"item\">\n        <slot v-bind=\"item\"></slot>\n      </template>\n  </fish-tree-node>\n</template>\n<script>\n  import FishTreeNode from './TreeNode.vue'\n\n  export default {\n    components: {FishTreeNode},\n    name: 'fish-tree',\n    props: {\n      defaultSelectedKey: { type: String, default: '' },\n      defaultCheckedKeys: { type: Array, default: () => [] },\n      multiple: { type: Boolean, default: false },\n      expand: { type: Boolean, default: false },\n      checkabled: { type: Function, default: (multiple) => multiple },\n      data: { type: Array, required: true }, // [{title: '', key: '', children: '', disabled: false}]\n      edited: { type: Boolean, default: false },\n      onItemRender: { type: Function, default: (item) => item.title },\n      iconCaretRight: { type: String, default: 'fa fa-caret-right' },\n      iconCaretDown: { type: String, default: 'fa fa-caret-down' }\n    },\n    data () {\n      return {\n        selectedKey: this.defaultSelectedKey,\n        dataKeyMap: this.getResetDataKeyMap()\n      }\n    },\n    watch: {\n      defaultSelectedKey (nowVal, oldVal) {\n        this.selectedKey = nowVal\n      },\n      defaultCheckedKeys (nowVal, oldVal) {\n        this.dataKeyMap = this.getResetDataKeyMap()\n      }\n    },\n    methods: {\n      getResetDataKeyMap () {\n        const dataKeyMap = {}\n        initDataKeysMap(dataKeyMap, new Set(this.defaultCheckedKeys), this.data, '-')\n        return dataKeyMap\n      },\n      onItemChecked (item) {\n        if (this.dataKeyMap[item.key][0] === 'checked') {\n          this.setAllChildrenState(item.key, '')\n        } else {\n          this.setAllChildrenState(item.key, 'checked')\n        }\n        this.setAllParentState(item.key)\n        this.$emit('item-checked', this.getCheckedKeys())\n      },\n      onItemContextmenu (item) {\n        this.selectedKey = item.key\n        this.$emit('item-contextmenu', item)\n      },\n      onItemDblclick (item) {\n        this.$emit('item-dblclick', item)\n      },\n      onItemClick (item) {\n        this.selectedKey = item.key\n        this.$emit('item-click', item)\n      },\n      onItemRemove (data, item, itemIndex, evt) {\n        this.$emit('item-remove', data, item, itemIndex, evt)\n      },\n      getCheckedKeys () {\n        // 获取选择的keys\n        let checkedKeys = Object.keys(this.dataKeyMap).filter((key) => {\n          return this.dataKeyMap[key][0] === 'checked'\n        })\n        return checkedKeys.filter((key, index) => {\n          for (let k of checkedKeys) {\n            if (k !== key && this.dataKeyMap[key][2] === k) {\n              return false\n            }\n          }\n          return true\n        })\n      },\n      setAllChildrenState (key, state) {\n        // 设置所有子节点的状态\n        this.dataKeyMap[key].splice(0, 1, state)\n        this.dataKeyMap[key][1] && this.dataKeyMap[key][1].forEach((child) => {\n          this.setAllChildrenState(child, state)\n        })\n      },\n      setAllParentState (key) {\n        // 设置所有父亲节点的状态\n        if (this.dataKeyMap[key]) {\n          let parentKey = this.dataKeyMap[key][2]\n          if (parentKey === '') return\n          if (this.dataKeyMap[parentKey] && this.dataKeyMap[parentKey][1]) {\n            let parentAllChildrenChecked = this.dataKeyMap[parentKey][1].every((child) => {\n              return this.dataKeyMap[child][0] === 'checked'\n            })\n            let parentAllChildrenOpen = this.dataKeyMap[parentKey][1].some((child) => {\n              return this.dataKeyMap[child][0] === 'open' || this.dataKeyMap[child][0] === 'checked'\n            })\n            this.dataKeyMap[parentKey].splice(0, 1, parentAllChildrenChecked ? 'checked' : (parentAllChildrenOpen ? 'open' : ''))\n          }\n          this.setAllParentState(parentKey)\n        }\n      }\n    }\n  }\n\n  const getKeyState = (dataKeysMap, setKeys, key, parentKey) => {\n    if (setKeys.has(key)) return 'checked'\n    // console.log(':::::setKeys:', setKeys, ', key:', key, ', dataKeysMap:', dataKeysMap[parentKey])\n    for (let setKey of setKeys.keys()) {\n      if (setKey.startsWith(key + '-')) return 'open'\n      if (key.startsWith(setKey)) return 'checked'\n    }\n    return ''\n  }\n  const initDataKeysMap = (dataKeysMap, setKeys, items, parentKey) => {\n    items && items.forEach((item) => {\n      // console.log('::::::', item)\n      dataKeysMap[item.key] = [\n        getKeyState(dataKeysMap, setKeys, item.key, parentKey),\n        item.children && item.children.map((child) => child.key),\n        parentKey]\n      initDataKeysMap(dataKeysMap, setKeys, item.children, item.key)\n    })\n  }\n</script>\n"],"sourceRoot":"node_modules/fish-ui/src/components"}]}